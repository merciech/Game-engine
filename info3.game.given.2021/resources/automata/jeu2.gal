Interrupteur(Init){
* (Init):
| Key(n) & (Cell(N,@) / Cell(S,@) / Cell(E,@) / Cell(W,@)) ? Pop :(Init)
| Key(b) & (Cell(N,#) / Cell(S,#) / Cell(E,#) / Cell(W,#)) ? Pop :(Init)
| Key(b) & (Cell(N,@) / Cell(S,@) / Cell(E,@) / Cell(W,@)) ? Wizz :(Init)
| Key(n) & (Cell(N,#) / Cell(S,#) / Cell(E,#) / Cell(W,#)) ? Wizz :(Init) 
| Cell(H, M) ? Pop :(Init)
| Cell(H, J) ? Wizz :(Init)
}

Teleporteur(Init){
* (Init):
| Cell(H,@) / Cell(H,#) ? Jump :(Init)
| Cell(H, M) ? Pop :(NoJump)
| Cell(H, J) ? Wizz :(Init)
* (NoJump):
| Cell(H, M) ? Pop :(Init)
| Cell(H, J) ? Wizz :(NoJump)
}

Squelette(Init){
* (Init):
| ! Got(Power) ? Explode :()
| Cell(N, A) ? Turn(N) / Hit / Wait(20) :(Init)
| Cell(S, A) ? Turn(S) / Hit / Wait(20) :(Init)
| Cell(E, A) ? Turn(E) / Hit / Wait(20) :(Init)
| Cell(W, A) ? Turn(W) / Hit / Wait(20) :(Init)
| Closest(N, A) & (! Cell(N,O)) & (! Cell(N,#)) & (! Cell(N,@)) & (! Cell(N,C)) ? Turn(N) / Move :(Init)
| Closest(S, A) & (! Cell(S,O)) & (! Cell(S,#)) & (! Cell(S,@)) & (! Cell(S,C)) ? Turn(S) / Move :(Init)
| Closest(E, A) & (! Cell(E,O)) & (! Cell(E,#)) & (! Cell(E,@)) & (! Cell(E,C)) ? Turn(E) / Move :(Init)
| Closest(W, A) & (! Cell(W,O)) & (! Cell(W,#)) & (! Cell(W,@)) & (! Cell(W,C)) ? Turn(W) / Move :(Init)
| Cell(H, M) ? Pop :(Init)
| Cell(H, J) ? Wizz :(Allie)
* (Allie):
| !Got(Power) ? Explode :()
| Cell(H, M) ? Pop :(Init)
| Cell(H, J) ? Wizz :(Allie)
*()
}

Zombie(Init){
* (Init):
| ! Got(Power) ? Explode :()
| Cell(N, A) ? Turn(N) / Hit / Wait(20) :(Init)
| Cell(S, A) ? Turn(S) / Hit / Wait(20) :(Init)
| Cell(E, A) ? Turn(E) / Hit / Wait(20) :(Init)
| Cell(W, A) ? Turn(W) / Hit / Wait(20) :(Init)
| Closest(N, A) & (! Cell(N,O)) & (! Cell(N,#)) & (! Cell(N,@)) & (! Cell(N,C)) ? Turn(N) / Move :(Init)
| Closest(S, A) & (! Cell(S,O)) & (! Cell(S,#)) & (! Cell(S,@)) & (! Cell(S,C)) ? Turn(S) / Move :(Init)
| Closest(E, A) & (! Cell(E,O)) & (! Cell(E,#)) & (! Cell(E,@)) & (! Cell(E,C)) ? Turn(E) / Move :(Init)
| Closest(W, A) & (! Cell(W,O)) & (! Cell(W,#)) & (! Cell(W,@)) & (! Cell(W,C)) ? Turn(W) / Move :(Init)
| Cell(H, M) ? Pop :(Init)
| Cell(H, J) ? Wizz :(Allie)
* (Allie):
| !Got(Power) ? Explode :()
| Cell(H, M) ? Pop :(Init)
| Cell(H, J) ? Wizz :(Allie)
*()
}

Pomme(Init){
* (Sain):
|Cell(H, M) ? Pop :(Sain)
|Cell(H, J) ? Wizz :(Poison)
* (Poison):
|Cell(H, M) ? Pop :(Sain)
|Cell(H, J) ? Wizz :(Poison)
}

Potion(Init){
* (Sain):
|Cell(H, M) ? Pop :(Sain)
|Cell(H, J) ? Wizz :(Poison)
* (Poison):
|Cell(H, M) ? Pop :(Sain)
|Cell(H, J) ? Wizz :(Poison)
}

Epee(Init){
* (Init):
| Cell(H, M) ? Pop :()
| Cell(H, J) ? Wizz :(Init)
* ()
}

Arc(Init){
* (Init):
| Cell(H, M) ? Pop :()
| Cell(H, J) ? Wizz :(Init)
* ()
}

Pioche(Init){
* (Init):
| Cell(H, M) ? Pop :()
| Cell(H, J) ? Wizz :()
* ()
}

Bombe(Init){
* (Init):
| Cell(H, M) ? Pop :()
| Cell(H, J) ? Wizz :()
* ()
}

Mine(Init){
* (Init):
| Cell(H,@) / Cell(H,#) / Cell(H,A) ? Explode : ()
| Cell(H, M) ? Pop :()
| Cell(H, J) ? Wizz :()
* ()
}

Sable(Init){
* (Init):
| Cell(H, @) / Cell(H,#) ? :(Catched)
| Cell(H, M) ? Pop :(Init)
| Cell(H, J) ? Wizz :()
*(Catched)
| Got(Power) ? Power(1) :(Catched)
| ! Got(Power) ? Power(25) / Pop / Hit :(Catched)
| Cell(H, M) ? Pop :(Catched)
| Cell(H, J) ? Wizz :()
 *()
}

Lave(init){
* (Init):
| ! Cell(H, V) ? :(OnTop)
* (OnTop):
| Cell(H,_) ? Hit :(OnTop)
}



